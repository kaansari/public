// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: admin_user.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	status "vectara.com/public/proto/status"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserType int32

const (
	UserType_USER_TYPE__NONE UserType = 0
	// A normal user
	UserType_USER_TYPE__USER UserType = 1
	// A user that is authenticated by an external identity provider such as Google etc.
	UserType_USER_TYPE__FEDERATED_USER UserType = 2
	// An application client. Please note that this doesn't work with ManageUser API.
	// To create an App Client, use the ManageAppClient API.
	UserType_USER_TYPE__APP_CLIENT UserType = 3
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "USER_TYPE__NONE",
		1: "USER_TYPE__USER",
		2: "USER_TYPE__FEDERATED_USER",
		3: "USER_TYPE__APP_CLIENT",
	}
	UserType_value = map[string]int32{
		"USER_TYPE__NONE":           0,
		"USER_TYPE__USER":           1,
		"USER_TYPE__FEDERATED_USER": 2,
		"USER_TYPE__APP_CLIENT":     3,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_user_proto_enumTypes[0].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_admin_user_proto_enumTypes[0]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{0}
}

type UserStatus int32

const (
	UserStatus_USER_STATUS__NONE UserStatus = 0
	// User is active
	UserStatus_USER_STATUS__ACTIVE UserStatus = 1
	// User is disabled
	UserStatus_USER_STATUS__DISABLED UserStatus = 2
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "USER_STATUS__NONE",
		1: "USER_STATUS__ACTIVE",
		2: "USER_STATUS__DISABLED",
	}
	UserStatus_value = map[string]int32{
		"USER_STATUS__NONE":     0,
		"USER_STATUS__ACTIVE":   1,
		"USER_STATUS__DISABLED": 2,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_user_proto_enumTypes[1].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_admin_user_proto_enumTypes[1]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{1}
}

type ListUsersType int32

const (
	ListUsersType_LIST_USERS_TYPE__NONE ListUsersType = 0
	// Only List users with customer account-level authorizations.
	ListUsersType_LIST_USERS_TYPE__CUSTOMER ListUsersType = 2
	// List All the users
	ListUsersType_LIST_USERS_TYPE__ALL ListUsersType = 3
)

// Enum value maps for ListUsersType.
var (
	ListUsersType_name = map[int32]string{
		0: "LIST_USERS_TYPE__NONE",
		2: "LIST_USERS_TYPE__CUSTOMER",
		3: "LIST_USERS_TYPE__ALL",
	}
	ListUsersType_value = map[string]int32{
		"LIST_USERS_TYPE__NONE":     0,
		"LIST_USERS_TYPE__CUSTOMER": 2,
		"LIST_USERS_TYPE__ALL":      3,
	}
)

func (x ListUsersType) Enum() *ListUsersType {
	p := new(ListUsersType)
	*p = x
	return p
}

func (x ListUsersType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUsersType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_user_proto_enumTypes[2].Descriptor()
}

func (ListUsersType) Type() protoreflect.EnumType {
	return &file_admin_user_proto_enumTypes[2]
}

func (x ListUsersType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUsersType.Descriptor instead.
func (ListUsersType) EnumDescriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{2}
}

type UserActionType int32

const (
	UserActionType_USER_ACTION_TYPE__NONE UserActionType = 0
	// Add User
	UserActionType_USER_ACTION_TYPE__ADD UserActionType = 1
	// Delete User
	UserActionType_USER_ACTION_TYPE__DELETE UserActionType = 2
	// Disable User
	UserActionType_USER_ACTION_TYPE__DISABLE UserActionType = 3
	// Enable User
	UserActionType_USER_ACTION_TYPE__ENABLE UserActionType = 4
	// Reset User Password
	UserActionType_USER_ACTION_TYPE__RESET_PASSWORD UserActionType = 5
)

// Enum value maps for UserActionType.
var (
	UserActionType_name = map[int32]string{
		0: "USER_ACTION_TYPE__NONE",
		1: "USER_ACTION_TYPE__ADD",
		2: "USER_ACTION_TYPE__DELETE",
		3: "USER_ACTION_TYPE__DISABLE",
		4: "USER_ACTION_TYPE__ENABLE",
		5: "USER_ACTION_TYPE__RESET_PASSWORD",
	}
	UserActionType_value = map[string]int32{
		"USER_ACTION_TYPE__NONE":           0,
		"USER_ACTION_TYPE__ADD":            1,
		"USER_ACTION_TYPE__DELETE":         2,
		"USER_ACTION_TYPE__DISABLE":        3,
		"USER_ACTION_TYPE__ENABLE":         4,
		"USER_ACTION_TYPE__RESET_PASSWORD": 5,
	}
)

func (x UserActionType) Enum() *UserActionType {
	p := new(UserActionType)
	*p = x
	return p
}

func (x UserActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_user_proto_enumTypes[3].Descriptor()
}

func (UserActionType) Type() protoreflect.EnumType {
	return &file_admin_user_proto_enumTypes[3]
}

func (x UserActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserActionType.Descriptor instead.
func (UserActionType) EnumDescriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{3}
}

// Represents a user in an account.
// A user is a person or an application that has access to the system.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the user. This is required for deleting, enabling, disabling a user
	// or to reset their password. This can be retrieved via ListUsers API or it is also
	// returned as part of ManageUser API when a new user is created.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the user. This is required for creating a new user.
	Handle string `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	// Type of user
	Type UserType `protobuf:"varint,4,opt,name=type,proto3,enum=com.vectara.admin.UserType" json:"type,omitempty"`
	// Comment about the user
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// Seconds since epoch when the user was created.
	TsCreate int64 `protobuf:"varint,6,opt,name=ts_create,json=tsCreate,proto3" json:"ts_create,omitempty"`
	// ID of the user who created this user.
	IdCreate uint32 `protobuf:"varint,7,opt,name=id_create,json=idCreate,proto3" json:"id_create,omitempty"`
	// Email address associated with the user. This is required for creating a new user.
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	// Status of the user such as ACTIVE, DISABLED etc.
	UserStatus UserStatus `protobuf:"varint,11,opt,name=user_status,json=userStatus,proto3,enum=com.vectara.admin.UserStatus" json:"user_status,omitempty"`
	// List of customer level roles
	Role []CustomerRole `protobuf:"varint,12,rep,packed,name=role,proto3,enum=com.vectara.admin.CustomerRole" json:"role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *User) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_USER_TYPE__NONE
}

func (x *User) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *User) GetTsCreate() int64 {
	if x != nil {
		return x.TsCreate
	}
	return 0
}

func (x *User) GetIdCreate() uint32 {
	if x != nil {
		return x.IdCreate
	}
	return 0
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetUserStatus() UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return UserStatus_USER_STATUS__NONE
}

func (x *User) GetRole() []CustomerRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of users that we want to retrieve
	ListUsersType ListUsersType `protobuf:"varint,3,opt,name=list_users_type,json=listUsersType,proto3,enum=com.vectara.admin.ListUsersType" json:"list_users_type,omitempty"`
	// A key that is passed to retrieve a specific page of results.
	// Leave empty to retrieve first page. Subsequent page requests should
	// use the page key returned in previous response, and all other
	// fields are ignored.
	PageKey []byte `protobuf:"bytes,4,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
	// Number of results to return.
	NumResults uint32 `protobuf:"varint,5,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{1}
}

func (x *ListUsersRequest) GetListUsersType() ListUsersType {
	if x != nil {
		return x.ListUsersType
	}
	return ListUsersType_LIST_USERS_TYPE__NONE
}

func (x *ListUsersRequest) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

func (x *ListUsersRequest) GetNumResults() uint32 {
	if x != nil {
		return x.NumResults
	}
	return 0
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of users
	User []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	// A key that is passed into a subsequent result in order to
	// retrieve the next page of results.
	PageKey []byte `protobuf:"bytes,2,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
	// Status response of the request such as OK, FAILED etc.
	Status *status.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersResponse) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ListUsersResponse) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

func (x *ListUsersResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ManageUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of users and actions to be performed on them
	UserAction []*ManageUserRequest_UserAction `protobuf:"bytes,1,rep,name=user_action,json=userAction,proto3" json:"user_action,omitempty"`
}

func (x *ManageUserRequest) Reset() {
	*x = ManageUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageUserRequest) ProtoMessage() {}

func (x *ManageUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageUserRequest.ProtoReflect.Descriptor instead.
func (*ManageUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{3}
}

func (x *ManageUserRequest) GetUserAction() []*ManageUserRequest_UserAction {
	if x != nil {
		return x.UserAction
	}
	return nil
}

type ManageUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of users alongwith relative status such as OK, FAILED etc.
	Response []*ManageUserResponse_UserResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ManageUserResponse) Reset() {
	*x = ManageUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageUserResponse) ProtoMessage() {}

func (x *ManageUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageUserResponse.ProtoReflect.Descriptor instead.
func (*ManageUserResponse) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{4}
}

func (x *ManageUserResponse) GetResponse() []*ManageUserResponse_UserResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// User and action to be performed on user
type ManageUserRequest_UserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User object
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Action to be performed on user
	UserActionType UserActionType `protobuf:"varint,2,opt,name=user_action_type,json=userActionType,proto3,enum=com.vectara.admin.UserActionType" json:"user_action_type,omitempty"`
}

func (x *ManageUserRequest_UserAction) Reset() {
	*x = ManageUserRequest_UserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageUserRequest_UserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageUserRequest_UserAction) ProtoMessage() {}

func (x *ManageUserRequest_UserAction) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageUserRequest_UserAction.ProtoReflect.Descriptor instead.
func (*ManageUserRequest_UserAction) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ManageUserRequest_UserAction) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ManageUserRequest_UserAction) GetUserActionType() UserActionType {
	if x != nil {
		return x.UserActionType
	}
	return UserActionType_USER_ACTION_TYPE__NONE
}

// List of users and their status
type ManageUserResponse_UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User object
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Status response of the request such as OK, FAILED etc.
	Status *status.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ManageUserResponse_UserResponse) Reset() {
	*x = ManageUserResponse_UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageUserResponse_UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageUserResponse_UserResponse) ProtoMessage() {}

func (x *ManageUserResponse_UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageUserResponse_UserResponse.ProtoReflect.Descriptor instead.
func (*ManageUserResponse_UserResponse) Descriptor() ([]byte, []int) {
	return file_admin_user_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ManageUserResponse_UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ManageUserResponse_UserResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_admin_user_proto protoreflect.FileDescriptor

var file_admin_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x02, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72,
	0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61,
	0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xee, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x86, 0x01, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x69, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x6e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x46, 0x45, 0x44, 0x45, 0x52, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x63, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x43, 0x55,
	0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x03, 0x2a, 0xc8, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x45,
	0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x05, 0x42, 0x44, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x42, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x5a, 0x1e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_user_proto_rawDescOnce sync.Once
	file_admin_user_proto_rawDescData = file_admin_user_proto_rawDesc
)

func file_admin_user_proto_rawDescGZIP() []byte {
	file_admin_user_proto_rawDescOnce.Do(func() {
		file_admin_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_user_proto_rawDescData)
	})
	return file_admin_user_proto_rawDescData
}

var file_admin_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_admin_user_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_admin_user_proto_goTypes = []interface{}{
	(UserType)(0),                           // 0: com.vectara.admin.UserType
	(UserStatus)(0),                         // 1: com.vectara.admin.UserStatus
	(ListUsersType)(0),                      // 2: com.vectara.admin.ListUsersType
	(UserActionType)(0),                     // 3: com.vectara.admin.UserActionType
	(*User)(nil),                            // 4: com.vectara.admin.User
	(*ListUsersRequest)(nil),                // 5: com.vectara.admin.ListUsersRequest
	(*ListUsersResponse)(nil),               // 6: com.vectara.admin.ListUsersResponse
	(*ManageUserRequest)(nil),               // 7: com.vectara.admin.ManageUserRequest
	(*ManageUserResponse)(nil),              // 8: com.vectara.admin.ManageUserResponse
	(*ManageUserRequest_UserAction)(nil),    // 9: com.vectara.admin.ManageUserRequest.UserAction
	(*ManageUserResponse_UserResponse)(nil), // 10: com.vectara.admin.ManageUserResponse.UserResponse
	(CustomerRole)(0),                       // 11: com.vectara.admin.CustomerRole
	(*status.Status)(nil),                   // 12: com.vectara.Status
}
var file_admin_user_proto_depIdxs = []int32{
	0,  // 0: com.vectara.admin.User.type:type_name -> com.vectara.admin.UserType
	1,  // 1: com.vectara.admin.User.user_status:type_name -> com.vectara.admin.UserStatus
	11, // 2: com.vectara.admin.User.role:type_name -> com.vectara.admin.CustomerRole
	2,  // 3: com.vectara.admin.ListUsersRequest.list_users_type:type_name -> com.vectara.admin.ListUsersType
	4,  // 4: com.vectara.admin.ListUsersResponse.user:type_name -> com.vectara.admin.User
	12, // 5: com.vectara.admin.ListUsersResponse.status:type_name -> com.vectara.Status
	9,  // 6: com.vectara.admin.ManageUserRequest.user_action:type_name -> com.vectara.admin.ManageUserRequest.UserAction
	10, // 7: com.vectara.admin.ManageUserResponse.response:type_name -> com.vectara.admin.ManageUserResponse.UserResponse
	4,  // 8: com.vectara.admin.ManageUserRequest.UserAction.user:type_name -> com.vectara.admin.User
	3,  // 9: com.vectara.admin.ManageUserRequest.UserAction.user_action_type:type_name -> com.vectara.admin.UserActionType
	4,  // 10: com.vectara.admin.ManageUserResponse.UserResponse.user:type_name -> com.vectara.admin.User
	12, // 11: com.vectara.admin.ManageUserResponse.UserResponse.status:type_name -> com.vectara.Status
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_admin_user_proto_init() }
func file_admin_user_proto_init() {
	if File_admin_user_proto != nil {
		return
	}
	file_admin_security_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_admin_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageUserRequest_UserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageUserResponse_UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_user_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_user_proto_goTypes,
		DependencyIndexes: file_admin_user_proto_depIdxs,
		EnumInfos:         file_admin_user_proto_enumTypes,
		MessageInfos:      file_admin_user_proto_msgTypes,
	}.Build()
	File_admin_user_proto = out.File
	file_admin_user_proto_rawDesc = nil
	file_admin_user_proto_goTypes = nil
	file_admin_user_proto_depIdxs = nil
}
