// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: admin_apikey.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	status "vectara.com/public/proto/status"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of ApiKey.
type ApiKeyType int32

const (
	ApiKeyType_API_KEY_TYPE__UNDEFINED ApiKeyType = 0
	// ApiKey for serving. Only gives access to query data.
	ApiKeyType_API_KEY_TYPE__SERVING ApiKeyType = 1
	// ApiKey for serving and indexing. Gives access to both query and index data.
	ApiKeyType_API_KEY_TYPE__SERVING_INDEXING ApiKeyType = 2
)

// Enum value maps for ApiKeyType.
var (
	ApiKeyType_name = map[int32]string{
		0: "API_KEY_TYPE__UNDEFINED",
		1: "API_KEY_TYPE__SERVING",
		2: "API_KEY_TYPE__SERVING_INDEXING",
	}
	ApiKeyType_value = map[string]int32{
		"API_KEY_TYPE__UNDEFINED":        0,
		"API_KEY_TYPE__SERVING":          1,
		"API_KEY_TYPE__SERVING_INDEXING": 2,
	}
)

func (x ApiKeyType) Enum() *ApiKeyType {
	p := new(ApiKeyType)
	*p = x
	return p
}

func (x ApiKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_apikey_proto_enumTypes[0].Descriptor()
}

func (ApiKeyType) Type() protoreflect.EnumType {
	return &file_admin_apikey_proto_enumTypes[0]
}

func (x ApiKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiKeyType.Descriptor instead.
func (ApiKeyType) EnumDescriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{0}
}

// Status of ApiKey.
type ApiKeyStatus int32

const (
	ApiKeyStatus_UNKNOWN  ApiKeyStatus = 0
	ApiKeyStatus_ENABLED  ApiKeyStatus = 1
	ApiKeyStatus_DISABLED ApiKeyStatus = 2
	ApiKeyStatus_DELETED  ApiKeyStatus = 3
)

// Enum value maps for ApiKeyStatus.
var (
	ApiKeyStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
		3: "DELETED",
	}
	ApiKeyStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
		"DELETED":  3,
	}
)

func (x ApiKeyStatus) Enum() *ApiKeyStatus {
	p := new(ApiKeyStatus)
	*p = x
	return p
}

func (x ApiKeyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiKeyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_apikey_proto_enumTypes[1].Descriptor()
}

func (ApiKeyStatus) Type() protoreflect.EnumType {
	return &file_admin_apikey_proto_enumTypes[1]
}

func (x ApiKeyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiKeyStatus.Descriptor instead.
func (ApiKeyStatus) EnumDescriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{1}
}

// Represents an ApiKey.
// An ApiKey provides anonymous access to common tasks such as index data, query data, etc.
type ApiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Description of the ApiKey.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Type of the ApiKey.
	KeyType ApiKeyType `protobuf:"varint,3,opt,name=key_type,json=keyType,proto3,enum=com.vectara.admin.ApiKeyType" json:"key_type,omitempty"`
	// Whether the ApiKey is enabled.
	Enabled bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Seconds sinch Epoch when the ApiKey becomes active.
	TsStart int64 `protobuf:"varint,5,opt,name=ts_start,json=tsStart,proto3" json:"ts_start,omitempty"`
	// Seconds sinch Epoch when the ApiKey becomes inactive.
	TsEnd int64 `protobuf:"varint,6,opt,name=ts_end,json=tsEnd,proto3" json:"ts_end,omitempty"`
	// Status of the ApiKey.
	Status ApiKeyStatus `protobuf:"varint,7,opt,name=status,proto3,enum=com.vectara.admin.ApiKeyStatus" json:"status,omitempty"`
}

func (x *ApiKey) Reset() {
	*x = ApiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKey) ProtoMessage() {}

func (x *ApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKey.ProtoReflect.Descriptor instead.
func (*ApiKey) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{0}
}

func (x *ApiKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApiKey) GetKeyType() ApiKeyType {
	if x != nil {
		return x.KeyType
	}
	return ApiKeyType_API_KEY_TYPE__UNDEFINED
}

func (x *ApiKey) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ApiKey) GetTsStart() int64 {
	if x != nil {
		return x.TsStart
	}
	return 0
}

func (x *ApiKey) GetTsEnd() int64 {
	if x != nil {
		return x.TsEnd
	}
	return 0
}

func (x *ApiKey) GetStatus() ApiKeyStatus {
	if x != nil {
		return x.Status
	}
	return ApiKeyStatus_UNKNOWN
}

// This request can be used to create one or more ApiKeys.
// Every ApiKey is bound to one or more corpora.
type CreateApiKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ApiKey data to create.
	ApiKeyData []*CreateApiKeyRequest_ApiKeyCorpus `protobuf:"bytes,1,rep,name=api_key_data,json=apiKeyData,proto3" json:"api_key_data,omitempty"`
}

func (x *CreateApiKeyRequest) Reset() {
	*x = CreateApiKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyRequest) ProtoMessage() {}

func (x *CreateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{1}
}

func (x *CreateApiKeyRequest) GetApiKeyData() []*CreateApiKeyRequest_ApiKeyCorpus {
	if x != nil {
		return x.ApiKeyData
	}
	return nil
}

// Response of the CreateApiKeyRequest.
type CreateApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ApiKeyOrStatus corresponding to the list of ApiKey data in request.
	Response []*CreateApiKeyResponse_ApiKeyOrStatus `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateApiKeyResponse) Reset() {
	*x = CreateApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyResponse) ProtoMessage() {}

func (x *CreateApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{2}
}

func (x *CreateApiKeyResponse) GetResponse() []*CreateApiKeyResponse_ApiKeyOrStatus {
	if x != nil {
		return x.Response
	}
	return nil
}

type ListApiKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max results to return.
	NumResults uint32 `protobuf:"varint,1,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
	// A key that is passed to retrieve a specific page of results.
	// Leave empty to retrieve first page. Subsequent page requests should
	// use the page key returned in previous response, and all other
	// fields are ignored.
	PageKey []byte `protobuf:"bytes,2,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
	// If set, returns corpus name & id associated with api keys.
	ReadCorporaInfo bool `protobuf:"varint,1000,opt,name=read_corpora_info,json=readCorporaInfo,proto3" json:"read_corpora_info,omitempty"`
}

func (x *ListApiKeysRequest) Reset() {
	*x = ListApiKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysRequest) ProtoMessage() {}

func (x *ListApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{3}
}

func (x *ListApiKeysRequest) GetNumResults() uint32 {
	if x != nil {
		return x.NumResults
	}
	return 0
}

func (x *ListApiKeysRequest) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

func (x *ListApiKeysRequest) GetReadCorporaInfo() bool {
	if x != nil {
		return x.ReadCorporaInfo
	}
	return false
}

type ListApiKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ApiKey and associated corpora.
	KeyData []*ListApiKeysResponse_KeyAndCorpora `protobuf:"bytes,1,rep,name=key_data,json=keyData,proto3" json:"key_data,omitempty"`
	// A key that is passed into a subsequent result in order to
	// retrieve the next page of results.
	PageKey []byte `protobuf:"bytes,2,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
	// Status of the ListApiKeysRequest.
	Status *status.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListApiKeysResponse) Reset() {
	*x = ListApiKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysResponse) ProtoMessage() {}

func (x *ListApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{4}
}

func (x *ListApiKeysResponse) GetKeyData() []*ListApiKeysResponse_KeyAndCorpora {
	if x != nil {
		return x.KeyData
	}
	return nil
}

func (x *ListApiKeysResponse) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

func (x *ListApiKeysResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteApiKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ApiKey ids to delete.
	KeyId []string `protobuf:"bytes,1,rep,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *DeleteApiKeyRequest) Reset() {
	*x = DeleteApiKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyRequest) ProtoMessage() {}

func (x *DeleteApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteApiKeyRequest) GetKeyId() []string {
	if x != nil {
		return x.KeyId
	}
	return nil
}

type DeleteApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the DeleteApiKeyRequest.
	Status []*status.Status `protobuf:"bytes,1000,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteApiKeyResponse) Reset() {
	*x = DeleteApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyResponse) ProtoMessage() {}

func (x *DeleteApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteApiKeyResponse) GetStatus() []*status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type EnableApiKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ApiKey ids to enable or disable.
	KeyEnablement []*EnableApiKeyRequest_ApiKeyEnablement `protobuf:"bytes,1,rep,name=key_enablement,json=keyEnablement,proto3" json:"key_enablement,omitempty"`
}

func (x *EnableApiKeyRequest) Reset() {
	*x = EnableApiKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableApiKeyRequest) ProtoMessage() {}

func (x *EnableApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableApiKeyRequest.ProtoReflect.Descriptor instead.
func (*EnableApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{7}
}

func (x *EnableApiKeyRequest) GetKeyEnablement() []*EnableApiKeyRequest_ApiKeyEnablement {
	if x != nil {
		return x.KeyEnablement
	}
	return nil
}

type EnableApiKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Status such as OK, FAILED corresponding to the EnableApiKeyRequest.
	Status []*status.Status `protobuf:"bytes,1000,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *EnableApiKeyResponse) Reset() {
	*x = EnableApiKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableApiKeyResponse) ProtoMessage() {}

func (x *EnableApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableApiKeyResponse.ProtoReflect.Descriptor instead.
func (*EnableApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{8}
}

func (x *EnableApiKeyResponse) GetStatus() []*status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// ApiKey data to create the ApiKey bound to one or more corpora.
type CreateApiKeyRequest_ApiKeyCorpus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Description of the ApiKey.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Type of the ApiKey.
	ApiKeyType ApiKeyType `protobuf:"varint,3,opt,name=api_key_type,json=apiKeyType,proto3,enum=com.vectara.admin.ApiKeyType" json:"api_key_type,omitempty"`
	// List of corpus ids to bind the ApiKey to.
	CorpusId []uint32 `protobuf:"varint,2,rep,packed,name=corpus_id,json=corpusId,proto3" json:"corpus_id,omitempty"`
}

func (x *CreateApiKeyRequest_ApiKeyCorpus) Reset() {
	*x = CreateApiKeyRequest_ApiKeyCorpus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiKeyRequest_ApiKeyCorpus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyRequest_ApiKeyCorpus) ProtoMessage() {}

func (x *CreateApiKeyRequest_ApiKeyCorpus) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyRequest_ApiKeyCorpus.ProtoReflect.Descriptor instead.
func (*CreateApiKeyRequest_ApiKeyCorpus) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateApiKeyRequest_ApiKeyCorpus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateApiKeyRequest_ApiKeyCorpus) GetApiKeyType() ApiKeyType {
	if x != nil {
		return x.ApiKeyType
	}
	return ApiKeyType_API_KEY_TYPE__UNDEFINED
}

func (x *CreateApiKeyRequest_ApiKeyCorpus) GetCorpusId() []uint32 {
	if x != nil {
		return x.CorpusId
	}
	return nil
}

// A valid key or Status of the ApiKey creation (in case of failure).
type CreateApiKeyResponse_ApiKeyOrStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A valid ApiKey.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Status of the ApiKey creation.
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateApiKeyResponse_ApiKeyOrStatus) Reset() {
	*x = CreateApiKeyResponse_ApiKeyOrStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiKeyResponse_ApiKeyOrStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyResponse_ApiKeyOrStatus) ProtoMessage() {}

func (x *CreateApiKeyResponse_ApiKeyOrStatus) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyResponse_ApiKeyOrStatus.ProtoReflect.Descriptor instead.
func (*CreateApiKeyResponse_ApiKeyOrStatus) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateApiKeyResponse_ApiKeyOrStatus) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CreateApiKeyResponse_ApiKeyOrStatus) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// A message containing ApiKey and associated corpora.
type ListApiKeysResponse_KeyAndCorpora struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApiKey data.
	ApiKey *ApiKey `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// List of corpora associated with the ApiKey.
	Corpus []*ListApiKeysResponse_KeyAndCorpora_CorpusInfo `protobuf:"bytes,2,rep,name=corpus,proto3" json:"corpus,omitempty"`
}

func (x *ListApiKeysResponse_KeyAndCorpora) Reset() {
	*x = ListApiKeysResponse_KeyAndCorpora{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiKeysResponse_KeyAndCorpora) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysResponse_KeyAndCorpora) ProtoMessage() {}

func (x *ListApiKeysResponse_KeyAndCorpora) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysResponse_KeyAndCorpora.ProtoReflect.Descriptor instead.
func (*ListApiKeysResponse_KeyAndCorpora) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListApiKeysResponse_KeyAndCorpora) GetApiKey() *ApiKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *ListApiKeysResponse_KeyAndCorpora) GetCorpus() []*ListApiKeysResponse_KeyAndCorpora_CorpusInfo {
	if x != nil {
		return x.Corpus
	}
	return nil
}

// Message containing corpus name and id.
type ListApiKeysResponse_KeyAndCorpora_CorpusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Corpus id.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Corpus name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListApiKeysResponse_KeyAndCorpora_CorpusInfo) Reset() {
	*x = ListApiKeysResponse_KeyAndCorpora_CorpusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiKeysResponse_KeyAndCorpora_CorpusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysResponse_KeyAndCorpora_CorpusInfo) ProtoMessage() {}

func (x *ListApiKeysResponse_KeyAndCorpora_CorpusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysResponse_KeyAndCorpora_CorpusInfo.ProtoReflect.Descriptor instead.
func (*ListApiKeysResponse_KeyAndCorpora_CorpusInfo) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *ListApiKeysResponse_KeyAndCorpora_CorpusInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListApiKeysResponse_KeyAndCorpora_CorpusInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EnableApiKeyRequest_ApiKeyEnablement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApiKey id to enable or disable.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Enable or disable using this variable
	Enable bool `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *EnableApiKeyRequest_ApiKeyEnablement) Reset() {
	*x = EnableApiKeyRequest_ApiKeyEnablement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_apikey_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableApiKeyRequest_ApiKeyEnablement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableApiKeyRequest_ApiKeyEnablement) ProtoMessage() {}

func (x *EnableApiKeyRequest_ApiKeyEnablement) ProtoReflect() protoreflect.Message {
	mi := &file_admin_apikey_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableApiKeyRequest_ApiKeyEnablement.ProtoReflect.Descriptor instead.
func (*EnableApiKeyRequest_ApiKeyEnablement) Descriptor() ([]byte, []int) {
	return file_admin_apikey_proto_rawDescGZIP(), []int{7, 0}
}

func (x *EnableApiKeyRequest_ApiKeyEnablement) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *EnableApiKeyRequest_ApiKeyEnablement) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

var File_admin_apikey_proto protoreflect.FileDescriptor

var file_admin_apikey_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72,
	0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61,
	0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xfd, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0c, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f,
	0x72, 0x70, 0x75, 0x73, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x8e, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x72, 0x70, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49,
	0x64, 0x22, 0xc0, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x54,
	0x0a, 0x0e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x7d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75,
	0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x80, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xce, 0x01, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x57, 0x0a, 0x06, 0x63,
	0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6f,
	0x72, 0x70, 0x75, 0x73, 0x1a, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x13, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x41, 0x0a, 0x10, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x68, 0x0a, 0x0a, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x50, 0x49,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x43, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x46, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42,
	0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x5a, 0x1e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_apikey_proto_rawDescOnce sync.Once
	file_admin_apikey_proto_rawDescData = file_admin_apikey_proto_rawDesc
)

func file_admin_apikey_proto_rawDescGZIP() []byte {
	file_admin_apikey_proto_rawDescOnce.Do(func() {
		file_admin_apikey_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_apikey_proto_rawDescData)
	})
	return file_admin_apikey_proto_rawDescData
}

var file_admin_apikey_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_admin_apikey_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_admin_apikey_proto_goTypes = []interface{}{
	(ApiKeyType)(0),                                      // 0: com.vectara.admin.ApiKeyType
	(ApiKeyStatus)(0),                                    // 1: com.vectara.admin.ApiKeyStatus
	(*ApiKey)(nil),                                       // 2: com.vectara.admin.ApiKey
	(*CreateApiKeyRequest)(nil),                          // 3: com.vectara.admin.CreateApiKeyRequest
	(*CreateApiKeyResponse)(nil),                         // 4: com.vectara.admin.CreateApiKeyResponse
	(*ListApiKeysRequest)(nil),                           // 5: com.vectara.admin.ListApiKeysRequest
	(*ListApiKeysResponse)(nil),                          // 6: com.vectara.admin.ListApiKeysResponse
	(*DeleteApiKeyRequest)(nil),                          // 7: com.vectara.admin.DeleteApiKeyRequest
	(*DeleteApiKeyResponse)(nil),                         // 8: com.vectara.admin.DeleteApiKeyResponse
	(*EnableApiKeyRequest)(nil),                          // 9: com.vectara.admin.EnableApiKeyRequest
	(*EnableApiKeyResponse)(nil),                         // 10: com.vectara.admin.EnableApiKeyResponse
	(*CreateApiKeyRequest_ApiKeyCorpus)(nil),             // 11: com.vectara.admin.CreateApiKeyRequest.ApiKeyCorpus
	(*CreateApiKeyResponse_ApiKeyOrStatus)(nil),          // 12: com.vectara.admin.CreateApiKeyResponse.ApiKeyOrStatus
	(*ListApiKeysResponse_KeyAndCorpora)(nil),            // 13: com.vectara.admin.ListApiKeysResponse.KeyAndCorpora
	(*ListApiKeysResponse_KeyAndCorpora_CorpusInfo)(nil), // 14: com.vectara.admin.ListApiKeysResponse.KeyAndCorpora.CorpusInfo
	(*EnableApiKeyRequest_ApiKeyEnablement)(nil),         // 15: com.vectara.admin.EnableApiKeyRequest.ApiKeyEnablement
	(*status.Status)(nil),                                // 16: com.vectara.Status
}
var file_admin_apikey_proto_depIdxs = []int32{
	0,  // 0: com.vectara.admin.ApiKey.key_type:type_name -> com.vectara.admin.ApiKeyType
	1,  // 1: com.vectara.admin.ApiKey.status:type_name -> com.vectara.admin.ApiKeyStatus
	11, // 2: com.vectara.admin.CreateApiKeyRequest.api_key_data:type_name -> com.vectara.admin.CreateApiKeyRequest.ApiKeyCorpus
	12, // 3: com.vectara.admin.CreateApiKeyResponse.response:type_name -> com.vectara.admin.CreateApiKeyResponse.ApiKeyOrStatus
	13, // 4: com.vectara.admin.ListApiKeysResponse.key_data:type_name -> com.vectara.admin.ListApiKeysResponse.KeyAndCorpora
	16, // 5: com.vectara.admin.ListApiKeysResponse.status:type_name -> com.vectara.Status
	16, // 6: com.vectara.admin.DeleteApiKeyResponse.status:type_name -> com.vectara.Status
	15, // 7: com.vectara.admin.EnableApiKeyRequest.key_enablement:type_name -> com.vectara.admin.EnableApiKeyRequest.ApiKeyEnablement
	16, // 8: com.vectara.admin.EnableApiKeyResponse.status:type_name -> com.vectara.Status
	0,  // 9: com.vectara.admin.CreateApiKeyRequest.ApiKeyCorpus.api_key_type:type_name -> com.vectara.admin.ApiKeyType
	16, // 10: com.vectara.admin.CreateApiKeyResponse.ApiKeyOrStatus.status:type_name -> com.vectara.Status
	2,  // 11: com.vectara.admin.ListApiKeysResponse.KeyAndCorpora.api_key:type_name -> com.vectara.admin.ApiKey
	14, // 12: com.vectara.admin.ListApiKeysResponse.KeyAndCorpora.corpus:type_name -> com.vectara.admin.ListApiKeysResponse.KeyAndCorpora.CorpusInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_admin_apikey_proto_init() }
func file_admin_apikey_proto_init() {
	if File_admin_apikey_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_apikey_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableApiKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableApiKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiKeyRequest_ApiKeyCorpus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiKeyResponse_ApiKeyOrStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiKeysResponse_KeyAndCorpora); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiKeysResponse_KeyAndCorpora_CorpusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_apikey_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableApiKeyRequest_ApiKeyEnablement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_apikey_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_apikey_proto_goTypes,
		DependencyIndexes: file_admin_apikey_proto_depIdxs,
		EnumInfos:         file_admin_apikey_proto_enumTypes,
		MessageInfos:      file_admin_apikey_proto_msgTypes,
	}.Build()
	File_admin_apikey_proto = out.File
	file_admin_apikey_proto_rawDesc = nil
	file_admin_apikey_proto_goTypes = nil
	file_admin_apikey_proto_depIdxs = nil
}
