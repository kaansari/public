// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: admin_metric.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	status "vectara.com/public/proto/status"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of metric to get
type UsageMetricsRequest_MetricType int32

const (
	UsageMetricsRequest_METRICTYPE__NONE     UsageMetricsRequest_MetricType = 0
	UsageMetricsRequest_METRICTYPE__INDEXING UsageMetricsRequest_MetricType = 1
	UsageMetricsRequest_METRICTYPE__SERVING  UsageMetricsRequest_MetricType = 2
)

// Enum value maps for UsageMetricsRequest_MetricType.
var (
	UsageMetricsRequest_MetricType_name = map[int32]string{
		0: "METRICTYPE__NONE",
		1: "METRICTYPE__INDEXING",
		2: "METRICTYPE__SERVING",
	}
	UsageMetricsRequest_MetricType_value = map[string]int32{
		"METRICTYPE__NONE":     0,
		"METRICTYPE__INDEXING": 1,
		"METRICTYPE__SERVING":  2,
	}
)

func (x UsageMetricsRequest_MetricType) Enum() *UsageMetricsRequest_MetricType {
	p := new(UsageMetricsRequest_MetricType)
	*p = x
	return p
}

func (x UsageMetricsRequest_MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageMetricsRequest_MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_metric_proto_enumTypes[0].Descriptor()
}

func (UsageMetricsRequest_MetricType) Type() protoreflect.EnumType {
	return &file_admin_metric_proto_enumTypes[0]
}

func (x UsageMetricsRequest_MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageMetricsRequest_MetricType.Descriptor instead.
func (UsageMetricsRequest_MetricType) EnumDescriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{1, 0}
}

// This window is used to specify a time range for metrics
type AbsoluteWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEpochSecs int64 `protobuf:"varint,1,opt,name=start_epoch_secs,json=startEpochSecs,proto3" json:"start_epoch_secs,omitempty"`
	EndEpochSecs   int64 `protobuf:"varint,2,opt,name=end_epoch_secs,json=endEpochSecs,proto3" json:"end_epoch_secs,omitempty"`
}

func (x *AbsoluteWindow) Reset() {
	*x = AbsoluteWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsoluteWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsoluteWindow) ProtoMessage() {}

func (x *AbsoluteWindow) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsoluteWindow.ProtoReflect.Descriptor instead.
func (*AbsoluteWindow) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{0}
}

func (x *AbsoluteWindow) GetStartEpochSecs() int64 {
	if x != nil {
		return x.StartEpochSecs
	}
	return 0
}

func (x *AbsoluteWindow) GetEndEpochSecs() int64 {
	if x != nil {
		return x.EndEpochSecs
	}
	return 0
}

// The request type for usage metrics
type UsageMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The corpus for which the metric is requested.
	CorpusId uint32 `protobuf:"varint,1,opt,name=corpus_id,json=corpusId,proto3" json:"corpus_id,omitempty"`
	// The time period for which the metric is requested.
	Window *AbsoluteWindow `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
	// The type of metric to get.
	Type UsageMetricsRequest_MetricType `protobuf:"varint,3,opt,name=type,proto3,enum=com.vectara.admin.UsageMetricsRequest_MetricType" json:"type,omitempty"`
	// The response stats will be aggregated by this interval. Minimum aggregation interval is 1 minute.
	// Supported granularity units for aggregation are days, hours and minutes.
	// For example, If 2.5 days (in seconds) are passed, results will be aggregated by 2 days.
	// Similarly, if 7.6 hours (in seconds) are passed, results will be aggregated by 7 hours.
	AggregationIntervalSecs int64 `protobuf:"varint,4,opt,name=aggregation_interval_secs,json=aggregationIntervalSecs,proto3" json:"aggregation_interval_secs,omitempty"`
}

func (x *UsageMetricsRequest) Reset() {
	*x = UsageMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetricsRequest) ProtoMessage() {}

func (x *UsageMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetricsRequest.ProtoReflect.Descriptor instead.
func (*UsageMetricsRequest) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{1}
}

func (x *UsageMetricsRequest) GetCorpusId() uint32 {
	if x != nil {
		return x.CorpusId
	}
	return 0
}

func (x *UsageMetricsRequest) GetWindow() *AbsoluteWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *UsageMetricsRequest) GetType() UsageMetricsRequest_MetricType {
	if x != nil {
		return x.Type
	}
	return UsageMetricsRequest_METRICTYPE__NONE
}

func (x *UsageMetricsRequest) GetAggregationIntervalSecs() int64 {
	if x != nil {
		return x.AggregationIntervalSecs
	}
	return 0
}

// Indexing data
type IndexingMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of documents indexed
	DocCount uint64 `protobuf:"varint,1,opt,name=doc_count,json=docCount,proto3" json:"doc_count,omitempty"`
	// The number of document parts indexed
	DocPartCount uint64 `protobuf:"varint,2,opt,name=doc_part_count,json=docPartCount,proto3" json:"doc_part_count,omitempty"`
	// The number of bytes indexed.
	// In case of Upload API, this is the actual bytes extracted from the document and not
	// the size of the document.
	// In case of Index API, this is the combined size of text in all the sections of the document.
	DocPartBytes uint64 `protobuf:"varint,3,opt,name=doc_part_bytes,json=docPartBytes,proto3" json:"doc_part_bytes,omitempty"`
	// The start time for this metric
	StartEpochSecs int64 `protobuf:"varint,4,opt,name=start_epoch_secs,json=startEpochSecs,proto3" json:"start_epoch_secs,omitempty"`
}

func (x *IndexingMetric) Reset() {
	*x = IndexingMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexingMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexingMetric) ProtoMessage() {}

func (x *IndexingMetric) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexingMetric.ProtoReflect.Descriptor instead.
func (*IndexingMetric) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{2}
}

func (x *IndexingMetric) GetDocCount() uint64 {
	if x != nil {
		return x.DocCount
	}
	return 0
}

func (x *IndexingMetric) GetDocPartCount() uint64 {
	if x != nil {
		return x.DocPartCount
	}
	return 0
}

func (x *IndexingMetric) GetDocPartBytes() uint64 {
	if x != nil {
		return x.DocPartBytes
	}
	return 0
}

func (x *IndexingMetric) GetStartEpochSecs() int64 {
	if x != nil {
		return x.StartEpochSecs
	}
	return 0
}

// Serving/querying data
type ServingMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of rows read
	RowsRead uint64 `protobuf:"varint,1,opt,name=rows_read,json=rowsRead,proto3" json:"rows_read,omitempty"`
	// The number of queries
	QueryCount uint64 `protobuf:"varint,2,opt,name=query_count,json=queryCount,proto3" json:"query_count,omitempty"`
	// The start time for this metric
	StartEpochSecs int64 `protobuf:"varint,3,opt,name=start_epoch_secs,json=startEpochSecs,proto3" json:"start_epoch_secs,omitempty"`
}

func (x *ServingMetric) Reset() {
	*x = ServingMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingMetric) ProtoMessage() {}

func (x *ServingMetric) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingMetric.ProtoReflect.Descriptor instead.
func (*ServingMetric) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{3}
}

func (x *ServingMetric) GetRowsRead() uint64 {
	if x != nil {
		return x.RowsRead
	}
	return 0
}

func (x *ServingMetric) GetQueryCount() uint64 {
	if x != nil {
		return x.QueryCount
	}
	return 0
}

func (x *ServingMetric) GetStartEpochSecs() int64 {
	if x != nil {
		return x.StartEpochSecs
	}
	return 0
}

type UsageMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of IntervalValue containing values for either Indexing or Serving. These are
	// aggregated by the interval specified in the request.
	Values []*UsageMetricsResponse_IntervalValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// The status response of the request
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UsageMetricsResponse) Reset() {
	*x = UsageMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetricsResponse) ProtoMessage() {}

func (x *UsageMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetricsResponse.ProtoReflect.Descriptor instead.
func (*UsageMetricsResponse) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{4}
}

func (x *UsageMetricsResponse) GetValues() []*UsageMetricsResponse_IntervalValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UsageMetricsResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// The response for a single interval
type UsageMetricsResponse_IntervalValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interval containing value for either Indexing or Serving
	//
	// Types that are assignable to Value:
	//	*UsageMetricsResponse_IntervalValue_IndexingValue
	//	*UsageMetricsResponse_IntervalValue_ServingValue
	Value isUsageMetricsResponse_IntervalValue_Value `protobuf_oneof:"value"`
}

func (x *UsageMetricsResponse_IntervalValue) Reset() {
	*x = UsageMetricsResponse_IntervalValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_metric_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageMetricsResponse_IntervalValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetricsResponse_IntervalValue) ProtoMessage() {}

func (x *UsageMetricsResponse_IntervalValue) ProtoReflect() protoreflect.Message {
	mi := &file_admin_metric_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetricsResponse_IntervalValue.ProtoReflect.Descriptor instead.
func (*UsageMetricsResponse_IntervalValue) Descriptor() ([]byte, []int) {
	return file_admin_metric_proto_rawDescGZIP(), []int{4, 0}
}

func (m *UsageMetricsResponse_IntervalValue) GetValue() isUsageMetricsResponse_IntervalValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UsageMetricsResponse_IntervalValue) GetIndexingValue() *IndexingMetric {
	if x, ok := x.GetValue().(*UsageMetricsResponse_IntervalValue_IndexingValue); ok {
		return x.IndexingValue
	}
	return nil
}

func (x *UsageMetricsResponse_IntervalValue) GetServingValue() *ServingMetric {
	if x, ok := x.GetValue().(*UsageMetricsResponse_IntervalValue_ServingValue); ok {
		return x.ServingValue
	}
	return nil
}

type isUsageMetricsResponse_IntervalValue_Value interface {
	isUsageMetricsResponse_IntervalValue_Value()
}

type UsageMetricsResponse_IntervalValue_IndexingValue struct {
	IndexingValue *IndexingMetric `protobuf:"bytes,1,opt,name=indexing_value,json=indexingValue,proto3,oneof"`
}

type UsageMetricsResponse_IntervalValue_ServingValue struct {
	ServingValue *ServingMetric `protobuf:"bytes,2,opt,name=serving_value,json=servingValue,proto3,oneof"`
}

func (*UsageMetricsResponse_IntervalValue_IndexingValue) isUsageMetricsResponse_IntervalValue_Value() {
}

func (*UsageMetricsResponse_IntervalValue_ServingValue) isUsageMetricsResponse_IntervalValue_Value() {}

var File_admin_metric_proto protoreflect.FileDescriptor

var file_admin_metric_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72,
	0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x65, 0x63,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73,
	0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x53, 0x65, 0x63, 0x73, 0x22, 0xc7, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52,
	0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74,
	0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x19, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x17, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x73, 0x22, 0x55, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x54, 0x52,
	0x49, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x54, 0x52,
	0x49, 0x43, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x50, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x6f, 0x63, 0x50, 0x61, 0x72, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x63,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x53, 0x65, 0x63, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x73,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x65, 0x63, 0x73,
	0x22, 0xc2, 0x02, 0x0a, 0x14, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x46, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x11, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5a, 0x1e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_metric_proto_rawDescOnce sync.Once
	file_admin_metric_proto_rawDescData = file_admin_metric_proto_rawDesc
)

func file_admin_metric_proto_rawDescGZIP() []byte {
	file_admin_metric_proto_rawDescOnce.Do(func() {
		file_admin_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_metric_proto_rawDescData)
	})
	return file_admin_metric_proto_rawDescData
}

var file_admin_metric_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_admin_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_admin_metric_proto_goTypes = []interface{}{
	(UsageMetricsRequest_MetricType)(0),        // 0: com.vectara.admin.UsageMetricsRequest.MetricType
	(*AbsoluteWindow)(nil),                     // 1: com.vectara.admin.AbsoluteWindow
	(*UsageMetricsRequest)(nil),                // 2: com.vectara.admin.UsageMetricsRequest
	(*IndexingMetric)(nil),                     // 3: com.vectara.admin.IndexingMetric
	(*ServingMetric)(nil),                      // 4: com.vectara.admin.ServingMetric
	(*UsageMetricsResponse)(nil),               // 5: com.vectara.admin.UsageMetricsResponse
	(*UsageMetricsResponse_IntervalValue)(nil), // 6: com.vectara.admin.UsageMetricsResponse.IntervalValue
	(*status.Status)(nil),                      // 7: com.vectara.Status
}
var file_admin_metric_proto_depIdxs = []int32{
	1, // 0: com.vectara.admin.UsageMetricsRequest.window:type_name -> com.vectara.admin.AbsoluteWindow
	0, // 1: com.vectara.admin.UsageMetricsRequest.type:type_name -> com.vectara.admin.UsageMetricsRequest.MetricType
	6, // 2: com.vectara.admin.UsageMetricsResponse.values:type_name -> com.vectara.admin.UsageMetricsResponse.IntervalValue
	7, // 3: com.vectara.admin.UsageMetricsResponse.status:type_name -> com.vectara.Status
	3, // 4: com.vectara.admin.UsageMetricsResponse.IntervalValue.indexing_value:type_name -> com.vectara.admin.IndexingMetric
	4, // 5: com.vectara.admin.UsageMetricsResponse.IntervalValue.serving_value:type_name -> com.vectara.admin.ServingMetric
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_admin_metric_proto_init() }
func file_admin_metric_proto_init() {
	if File_admin_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsoluteWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexingMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_metric_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_metric_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_metric_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageMetricsResponse_IntervalValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_admin_metric_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*UsageMetricsResponse_IntervalValue_IndexingValue)(nil),
		(*UsageMetricsResponse_IntervalValue_ServingValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_metric_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_metric_proto_goTypes,
		DependencyIndexes: file_admin_metric_proto_depIdxs,
		EnumInfos:         file_admin_metric_proto_enumTypes,
		MessageInfos:      file_admin_metric_proto_msgTypes,
	}.Build()
	File_admin_metric_proto = out.File
	file_admin_metric_proto_rawDesc = nil
	file_admin_metric_proto_goTypes = nil
	file_admin_metric_proto_depIdxs = nil
}
