// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: admin_job.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	status "vectara.com/public/proto/status"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of jobs.
type JobType int32

const (
	JobType_JOB__UNKNOWN                     JobType = 0
	JobType_JOB__CORPUS_REBUILD_VECTOR_INDEX JobType = 1
	JobType_JOB__CORPUS_REPLACE_FILTER_ATTRS JobType = 2
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "JOB__UNKNOWN",
		1: "JOB__CORPUS_REBUILD_VECTOR_INDEX",
		2: "JOB__CORPUS_REPLACE_FILTER_ATTRS",
	}
	JobType_value = map[string]int32{
		"JOB__UNKNOWN":                     0,
		"JOB__CORPUS_REBUILD_VECTOR_INDEX": 1,
		"JOB__CORPUS_REPLACE_FILTER_ATTRS": 2,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_job_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_admin_job_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_admin_job_proto_rawDescGZIP(), []int{0}
}

// The state of a job.
type JobState int32

const (
	JobState_JOB_STATE__UNKNOWN                          JobState = 0
	JobState_JOB_STATE__QUEUED                           JobState = 5
	JobState_JOB_STATE__STARTED                          JobState = 10
	JobState_JOB_STATE__COMPLETED                        JobState = 15
	JobState_JOB_STATE__FAILED                           JobState = 20
	JobState_JOB_STATE__TRANSIENT_FAILURE_RETRY_IMMINENT JobState = 25
	JobState_JOB_STATE__ABORTED                          JobState = 30
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0:  "JOB_STATE__UNKNOWN",
		5:  "JOB_STATE__QUEUED",
		10: "JOB_STATE__STARTED",
		15: "JOB_STATE__COMPLETED",
		20: "JOB_STATE__FAILED",
		25: "JOB_STATE__TRANSIENT_FAILURE_RETRY_IMMINENT",
		30: "JOB_STATE__ABORTED",
	}
	JobState_value = map[string]int32{
		"JOB_STATE__UNKNOWN":                          0,
		"JOB_STATE__QUEUED":                           5,
		"JOB_STATE__STARTED":                          10,
		"JOB_STATE__COMPLETED":                        15,
		"JOB_STATE__FAILED":                           20,
		"JOB_STATE__TRANSIENT_FAILURE_RETRY_IMMINENT": 25,
		"JOB_STATE__ABORTED":                          30,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_job_proto_enumTypes[1].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_admin_job_proto_enumTypes[1]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_admin_job_proto_rawDescGZIP(), []int{1}
}

type ListJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional filters. If specified, the filters are logically ANDed.
	//
	// [Optional] If specified, return the job for this id.
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// [Optional] If specified, return jobs for these corpora only.
	CorpusId []uint32 `protobuf:"varint,2,rep,packed,name=corpus_id,json=corpusId,proto3" json:"corpus_id,omitempty"`
	// [Optional] Get jobs that were created since this epoch timestamp.
	// Max allowed value is 180 days ago. Default is 180 days.
	EpochSecs int64 `protobuf:"varint,3,opt,name=epoch_secs,json=epochSecs,proto3" json:"epoch_secs,omitempty"`
	// [Optional] Get jobs with these states. If not specified, all job
	// states are fetched.
	// Default: If not set, JOB_STATE__QUEUED and JOB_STATE__STARTED are returned.
	State []JobState `protobuf:"varint,4,rep,packed,name=state,proto3,enum=com.vectara.admin.JobState" json:"state,omitempty"`
	// Maximum results to return. Max allowed value is 100.
	NumResults uint32 `protobuf:"varint,25,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
	// A key that is passed in to retrieve a specific page of results.
	// Leave empty to retrieve first page. Subsequent page request should
	// use the page key returned in previous response, and all other
	// fields are ignored.
	PageKey []byte `protobuf:"bytes,30,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_admin_job_proto_rawDescGZIP(), []int{0}
}

func (x *ListJobsRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ListJobsRequest) GetCorpusId() []uint32 {
	if x != nil {
		return x.CorpusId
	}
	return nil
}

func (x *ListJobsRequest) GetEpochSecs() int64 {
	if x != nil {
		return x.EpochSecs
	}
	return 0
}

func (x *ListJobsRequest) GetState() []JobState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ListJobsRequest) GetNumResults() uint32 {
	if x != nil {
		return x.NumResults
	}
	return 0
}

func (x *ListJobsRequest) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

// Represents a job in the system.
// A job is typically a long running unit of work for achieving a particular outcome.
// Example job: replace filter attributes of a corpus.
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type JobType `protobuf:"varint,2,opt,name=type,proto3,enum=com.vectara.admin.JobType" json:"type,omitempty"`
	// Set if the job belongs to a corpus.
	CorpusId []uint32 `protobuf:"varint,3,rep,packed,name=corpus_id,json=corpusId,proto3" json:"corpus_id,omitempty"`
	State    JobState `protobuf:"varint,4,opt,name=state,proto3,enum=com.vectara.admin.JobState" json:"state,omitempty"`
	// Epoch (secs) when the job was created.
	TsCreate int64 `protobuf:"varint,10,opt,name=ts_create,json=tsCreate,proto3" json:"ts_create,omitempty"`
	// Epoch (secs) when the job was started. Not set if the job
	// hasn't started yet.
	TsStart int64 `protobuf:"varint,15,opt,name=ts_start,json=tsStart,proto3" json:"ts_start,omitempty"`
	// Epoch (secs) when the job completed. Not set if the job
	// hasn't completed yet.
	TsComplete int64 `protobuf:"varint,16,opt,name=ts_complete,json=tsComplete,proto3" json:"ts_complete,omitempty"`
	// Handle of the user that created this job.
	UserHandle string `protobuf:"bytes,17,opt,name=user_handle,json=userHandle,proto3" json:"user_handle,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_admin_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_admin_job_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_JOB__UNKNOWN
}

func (x *Job) GetCorpusId() []uint32 {
	if x != nil {
		return x.CorpusId
	}
	return nil
}

func (x *Job) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_JOB_STATE__UNKNOWN
}

func (x *Job) GetTsCreate() int64 {
	if x != nil {
		return x.TsCreate
	}
	return 0
}

func (x *Job) GetTsStart() int64 {
	if x != nil {
		return x.TsStart
	}
	return 0
}

func (x *Job) GetTsComplete() int64 {
	if x != nil {
		return x.TsComplete
	}
	return 0
}

func (x *Job) GetUserHandle() string {
	if x != nil {
		return x.UserHandle
	}
	return ""
}

type ListJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*status.Status `protobuf:"bytes,1000,rep,name=status,proto3" json:"status,omitempty"`
	Job    []*Job           `protobuf:"bytes,10,rep,name=job,proto3" json:"job,omitempty"`
	// A key that is passed into a subsequent result in order to
	// retrieve the next page of results.
	PageKey []byte `protobuf:"bytes,500,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_admin_job_proto_rawDescGZIP(), []int{2}
}

func (x *ListJobsResponse) GetStatus() []*status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListJobsResponse) GetJob() []*Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *ListJobsResponse) GetPageKey() []byte {
	if x != nil {
		return x.PageKey
	}
	return nil
}

var File_admin_job_proto protoreflect.FileDescriptor

var file_admin_job_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x65, 0x63, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x8f, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4b, 0x65, 0x79, 0x2a, 0x67, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x4a, 0x4f, 0x42, 0x5f, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x24, 0x0a, 0x20, 0x4a, 0x4f, 0x42, 0x5f, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f,
	0x52, 0x45, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x4a, 0x4f, 0x42, 0x5f, 0x5f, 0x43,
	0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x46, 0x49,
	0x4c, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x53, 0x10, 0x02, 0x2a, 0xcb, 0x01, 0x0a,
	0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f,
	0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x14, 0x12, 0x2f, 0x0a, 0x2b, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x4d, 0x4d, 0x49, 0x4e, 0x45, 0x4e, 0x54,
	0x10, 0x19, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x1e, 0x42, 0x43, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42,
	0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5a,
	0x1e, 0x76, 0x65, 0x63, 0x74, 0x61, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_job_proto_rawDescOnce sync.Once
	file_admin_job_proto_rawDescData = file_admin_job_proto_rawDesc
)

func file_admin_job_proto_rawDescGZIP() []byte {
	file_admin_job_proto_rawDescOnce.Do(func() {
		file_admin_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_job_proto_rawDescData)
	})
	return file_admin_job_proto_rawDescData
}

var file_admin_job_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_admin_job_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_admin_job_proto_goTypes = []interface{}{
	(JobType)(0),             // 0: com.vectara.admin.JobType
	(JobState)(0),            // 1: com.vectara.admin.JobState
	(*ListJobsRequest)(nil),  // 2: com.vectara.admin.ListJobsRequest
	(*Job)(nil),              // 3: com.vectara.admin.Job
	(*ListJobsResponse)(nil), // 4: com.vectara.admin.ListJobsResponse
	(*status.Status)(nil),    // 5: com.vectara.Status
}
var file_admin_job_proto_depIdxs = []int32{
	1, // 0: com.vectara.admin.ListJobsRequest.state:type_name -> com.vectara.admin.JobState
	0, // 1: com.vectara.admin.Job.type:type_name -> com.vectara.admin.JobType
	1, // 2: com.vectara.admin.Job.state:type_name -> com.vectara.admin.JobState
	5, // 3: com.vectara.admin.ListJobsResponse.status:type_name -> com.vectara.Status
	3, // 4: com.vectara.admin.ListJobsResponse.job:type_name -> com.vectara.admin.Job
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_admin_job_proto_init() }
func file_admin_job_proto_init() {
	if File_admin_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_job_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_job_proto_goTypes,
		DependencyIndexes: file_admin_job_proto_depIdxs,
		EnumInfos:         file_admin_job_proto_enumTypes,
		MessageInfos:      file_admin_job_proto_msgTypes,
	}.Build()
	File_admin_job_proto = out.File
	file_admin_job_proto_rawDesc = nil
	file_admin_job_proto_goTypes = nil
	file_admin_job_proto_depIdxs = nil
}
